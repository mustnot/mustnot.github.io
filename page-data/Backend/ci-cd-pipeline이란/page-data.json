{"componentChunkName":"component---src-templates-blog-post-js","path":"/Backend/ci-cd-pipeline이란/","result":{"data":{"site":{"siteMetadata":{"title":"MUSTNOT","author":"[mustnot]","siteUrl":"https://mustnot.github.io","comment":{"disqusShortName":"","utterances":"mustnot/mustnot.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"8c95922f-c4ec-5fbc-b559-6d525dc77279","excerpt":"CI/CD CI/CD는 어플리케이션 개발 단계를 자동화하여 보다 짧은 주기로 고객에게 제공하는 방법으로 기본 개념은 지속적인 통합, 지속적인 서비스 제공, 지속적인 배포로 새로운 코드 통합으로 인해 개발 및 운영팀에 발생하는 문제인 일명 인테그레이션 헬(integration hell)을 해결하기 위한 솔루션을 말한다. (인테그레이션 헬, 일명 지옥이라는 것은 마지막 개발자가 자리를 떠날 때까지 존재한다. 😂) 특히, CI/CD…","html":"<h2 id=\"cicd\" style=\"position:relative;\"><a href=\"#cicd\" aria-label=\"cicd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI/CD</h2>\n<p>CI/CD는 어플리케이션 개발 단계를 자동화하여 보다 짧은 주기로 고객에게 제공하는 방법으로 기본 개념은 지속적인 통합, 지속적인 서비스 제공, 지속적인 배포로 새로운 코드 통합으로 인해 개발 및 운영팀에 발생하는 문제인 일명 인테그레이션 헬(integration hell)을 해결하기 위한 솔루션을 말한다.</p>\n<p>(인테그레이션 헬, 일명 지옥이라는 것은 마지막 개발자가 자리를 떠날 때까지 존재한다. 😂)</p>\n<p>특히, CI/CD는 어플리케이션의 통합 및 테스트 단계에서부터 제공 및 배포에 이르는 어플리케이션 라이프사이클 전체에 걸친 지속적인 자동화와 모니터링을 제공한다. 이런 구축 사례를 일반적으로 CI/CD 파이프라인이라 부르며, 개발 및 운영팀의 애자일 방식 협력을 지원한다.</p>\n<p>ㅤ</p>\n<h4 id=\"용어-정리\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\"용어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어 정리</h4>\n<p><strong>CI (Continuous Integration) : 지속적인 통합</strong></p>\n<p>애플리케이션에 대한 새로운 코드 변경 사항이 정기적으로 빌드 및 테스트되어 공유할 수 있는 레포지토리에 통합되어 여러 명의 개발자가 동시에 어플리케이션 개발과 관련된 코드 작업을 할 경우 서로 충돌할 수 있는 문제를 해결 할 수 있다.</p>\n<p><strong>CD (Continuous Delivery/Deployment) 지속적인 서비스 제공 / 배포</strong></p>\n<p>D가 제공과 배포 두 용어를 혼용해서 사용하는데, 상호 교환적으로 사용하고 있다고 보면 된다. 이 두 용어 모두 파이프라인 추가 단계에 대한 자동화를 뜻하지만 때로는 얼마나 많은 자동화가 이루어지고 있는지를 설명하기 위해 별도로 구분되어 사용되기도 한다.</p>\n<p>여기서 <strong>지속적인 제공</strong>이란, 개발자들이 어플리케이션에 제공한 변경 사항이 테스트를 거쳐 레포지토리에 자동으로 업로드되는 것을 의미하며, 운영팀은 해당 Repository에서 애플리케이션을 실시간으로 프로덕트 환경으로 배포할 수 있다. 이는 개발팀과 비즈니스 팀 간의 가시성과 커뮤니케이션 부족 문제를 해결해주는데, 지속적인 제공은 <strong><u>최소한의 노력</u></strong>으로 새로운 코드를 배포하는 것을 목표로 한다.</p>\n<p><strong>지속적인 배포</strong>란, 개발자의 변경 사항을 Repository에서 고객이 사용 가능한 프로덕션 환경까지 자동으로 릴리스 하는 것을 의미하는데 이는 애플리케이션 제공 속도를 저해하는 수동 프로세스로 인한 운영팀의 프로세스 과부하를 해결해준다. 지속적인 배포는 파이프라인의 다음 단계를 자동화함으로써 지속적인 제공을 가진 장점을 활용한다.</p>\n<p>ㅤ</p>\n<h3 id=\"cicd-파이프라인이란\" style=\"position:relative;\"><a href=\"#cicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8%EC%9D%B4%EB%9E%80\" aria-label=\"cicd 파이프라인이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI/CD 파이프라인이란?</h3>\n<p>CI/CD 파이프라인은 새 버전의 소프트웨어를 제공하기 위해 수행해야 할 일련의 프로세스로 DevOps 또는 사이트 신뢰성 엔지니어(SRE) 방식을 통해 효과적으로 소프트웨어를 제공하는 데 포커싱을 맞춘 방법이다.</p>\n<blockquote>\n<p>SRE (Site Reliability Engineering) : IT 운영에 대한 소프트웨어 엔지니어링 접근 방식으로 SRE 팀은 소프트웨어를 툴로 활용하여 시스템을 관리하고, 문제를 해결, 운영 태스크를 자동화한다. 또한 코드의 배포, 설정, 모니터링 방식 뿐만 아니라 프로덕션 환경에서 서비스 가용성, 대기 시간, 변경 관리, 비상 대응 및 용량 관리를 담당한다.</p>\n</blockquote>\n<p>특히 통합 및 테스트 단계와 제공 및 배포 단계에서 모니터링 및 자동화를 도입하여 애플리케이션 개발 프로세스를 개선한다. 파이프라인의 각 단계를 수동으로 실행할 수도 있지만 CI/CD 파이프라인의 진가는 자동화할 때 드러난다.</p>\n<h4 id=\"cicd-파이프라인의-요소\" style=\"position:relative;\"><a href=\"#cicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8%EC%9D%98-%EC%9A%94%EC%86%8C\" aria-label=\"cicd 파이프라인의 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI/CD 파이프라인의 요소</h4>\n<ol>\n<li><strong>빌드 (Build)</strong> 어플리케이션을 컴파일하는 단계</li>\n<li><strong>테스트 (Test)</strong> 코드를 테스트하는 단계로 이 단계를 자동화하여 시간 수고를 줄일 수 있다.</li>\n<li><strong>릴리스 (Release)</strong> 어플리케이션을 레포지토리에 제공하는 단계</li>\n<li><strong>배포 (Deploy)</strong> 코드를 프로덕션에 배포하는 단계</li>\n<li><strong>검증 및 컴플라이언스 (Validation &#x26; Compliance)</strong> 빌드 검증 단계는 해당 조직의 필요에 의해 결정되는데, Clair와 같은 이미지 보안 스캔 툴을 사용하여 알려진 취약점과 비교하는 방법으로 이미지의 품질을 보장한다.</li>\n</ol>\n<p>ㅤ</p>\n<h3 id=\"ci-tool-비교\" style=\"position:relative;\"><a href=\"#ci-tool-%EB%B9%84%EA%B5%90\" aria-label=\"ci tool 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI Tool 비교</h3>\n<blockquote>\n<p><a href=\"https://medium.com/day34/ci-cd-tool-comparison-f710a4777852\">CI/CD Tool 비교 - Medium</a> 글 참고, 정리하다보니 Jenkins를 왜 많이 쓰는지 알겠다.</p>\n</blockquote>\n<p>ㅤ</p>\n<h4 id=\"travis-ci\" style=\"position:relative;\"><a href=\"#travis-ci\" aria-label=\"travis ci permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Travis CI</h4>\n<p><strong>Travis CI</strong> 는 <strong>Github</strong> 에서 진행되는 오픈소스 프로젝트를 위한 지속적인 통합(Continuous Integration) 서비스로, 2011년에 설립되어 2012년에 급성장하였으며, Ruby 언어만 지원하였으나 현재 대부분의 개발 언어를 지원하고 있다. Travis CI를 이용하면 Github repository에 있는 프로젝트를 특정 이벤트에 따라 자동으로 테스트, 빌드하거나 배포할 수 있다. Private Repository는 유로로 일정 금액을 지불하고 사용할 수 있다.</p>\n<p><strong>Travis CI의 흐름 요약</strong></p>\n<ol>\n<li><strong>Local Git :</strong> 로컬에서 작성한 소스를 Github 저장소에 Push 한다.</li>\n<li>**Github Push : ** Github master(main) 저장소에 소스가 Push가 되면, Travis CI에게 소스가 Push 되었다는 것을 알려준다.</li>\n<li><strong>Travis CI :</strong> 업데이트된 Github의 소스를 가져와 테스트를 진행한다.</li>\n<li><strong>AWS (Cloud) :</strong> 테스트 코드 실행 후 테스트가 성공하면 AWS 같은 클라우드 환경에서 배포를 진행한다.</li>\n</ol>\n<p><strong>가격 정책</strong></p>\n<ul>\n<li>무료 : OpenSouce 프로젝트만 무료</li>\n<li>유료 : 69 USD / Month, 한 번에 한 개의 Job만 수행</li>\n</ul>\n<h4 id=\"circle-ci\" style=\"position:relative;\"><a href=\"#circle-ci\" aria-label=\"circle ci permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Circle CI</h4>\n<p>구동 환경 : Cloud, <u>On-Premise</u></p>\n<p>가격 정책 :</p>\n<ul>\n<li>무료 : 한 번에 한 개의 Job 수행 / 주당 2,500 무료 크레딧 제공</li>\n<li>유료 : 30 USD / Month (사용자 수와 메모리 머신 크기에 비례)</li>\n</ul>\n<h4 id=\"jenkins\" style=\"position:relative;\"><a href=\"#jenkins\" aria-label=\"jenkins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins</h4>\n<p>가격 정책 :</p>\n<ul>\n<li>오픈 소스로 무료이다.</li>\n</ul>\n<p>특징 :</p>\n<ul>\n<li>프로젝트 표준 컴파일 환경에서 컴파일 오류 검출</li>\n<li>자동화 테스트 수행</li>\n<li>정적 코드 분석으로 코딩 규약 준수여부 체크</li>\n<li>프로파일링 툴을 이용한 소스 변경에 따른 성능 변화 감시</li>\n<li>결합 테스트 환경에 대한 배포 작업</li>\n<li>수 많은 플러그인과 Python과 같은 스크립트 추가 가능</li>\n<li>각종 배치 작업의 간략화</li>\n</ul>","frontmatter":{"title":"CI/CD Pipeline이란","date":"October 18, 2020"}}},"pageContext":{"slug":"/Backend/ci-cd-pipeline이란/","previous":{"fields":{"slug":"/Backend/데이터베이스-관련-내용-정리/"},"frontmatter":{"title":"데이터베이스 관련 내용 정리","category":"Backend","draft":false}},"next":{"fields":{"slug":"/Backend/네트워크-관련-용어-정리/"},"frontmatter":{"title":"네트워크 관련 용어 정리","category":"Backend","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}